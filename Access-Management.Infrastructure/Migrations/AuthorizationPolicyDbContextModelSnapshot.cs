// <auto-generated />
using System;
using Access_Management.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Access_Management.Infrastructure.Migrations
{
    [DbContext(typeof(AuthorizationPolicyDbContext))]
    partial class AuthorizationPolicyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Access_Management.Infrastructure.Model.ResourceAuthorizationPolicy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessSource")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationDomain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AuthorizationPolicies");
                });

            modelBuilder.Entity("Access_Management.Infrastructure.Model.ResourceAuthorizationRule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PolicyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PolicyId");

                    b.ToTable("AuthorizationRules");
                });

            modelBuilder.Entity("Access_Management.Infrastructure.Model.ResourceAuthorizationRule", b =>
                {
                    b.HasOne("Access_Management.Infrastructure.Model.ResourceAuthorizationPolicy", "AuthorizationPolicy")
                        .WithMany("AuthorizationRules")
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuthorizationPolicy");
                });

            modelBuilder.Entity("Access_Management.Infrastructure.Model.ResourceAuthorizationPolicy", b =>
                {
                    b.Navigation("AuthorizationRules");
                });
#pragma warning restore 612, 618
        }
    }
}
